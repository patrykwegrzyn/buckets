import{EventEmitter as p}from"events";import{open as f}from"lmdbx";var u=class extends p{constructor(e,i){super();this.flushing=!1;this.dbs=new Map,this.env=f(e,i),this.ttlBucket=this.env.openDB("ttl",{cache:!0})}ttlKey(e,i,t){return`${e}:${i}:${t}`}wrapDB(e,i){let t=this,o=Object.create(e);return o.put=function(n,s,r){let a;if(r&&r.version!==void 0&&r.ifVersion!==void 0?a=e.put(n,s,r.version,r.ifVersion):r&&r.version!==void 0?a=e.put(n,s,r.version):a=e.put(n,s),r?.ttl){let c=Date.now()+r.ttl,l=t.ttlKey(c,i,String(n));t.ttlBucket.put(l,"")}return r?.quiet||t.emit("change",{op:"put",bucket:i,id:n,value:e.encoder.encode(s),version:r?.version,ttl:r?.ttl}),a},o.remove=function(n,s){if(!s?.quiet){let r=e.get(n);t.emit("change",{op:"remove",bucket:i,id:n,value:r,version:s?.ifVersion})}return s?.ifVersion!==void 0?e.remove(n,s.ifVersion):e.remove(n)},o}bucket(e,i){let t=this.dbs.get(e);if(!t){let o={cache:!0,...i},n=this.env.openDB(e,o);t=this.wrapDB(n,e),this.dbs.set(e,t)}return t}async clean(){if(this.flushing)return;this.flushing=!0;let e=[],i=Date.now().toString();for(let t of this.ttlBucket.getKeys({end:i})){let o=t.split(":");if(o.length<3)continue;let n=o[1],s=o.slice(2).join(":");e.push({ttlKey:t,bucketName:n,id:s})}await this.env.transaction(()=>{for(let{ttlKey:t,bucketName:o,id:n}of e)this.bucket(o).remove(n,{quiet:!0}),this.ttlBucket.remove(t)}),this.flushing=!1}};export{u as Store};
//# sourceMappingURL=index.mjs.map